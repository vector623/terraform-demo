name: release-deploy
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  setref:
    environment: sandbox
    runs-on: ubuntu-latest
    outputs:
      gitref: ${{ steps.set-gitrefs.outputs.gitref }}
      gitcommit: ${{ steps.set-gitrefs.outputs.gitcommit }}
      jiraissue: ${{ steps.set-gitrefs.outputs.jiraissue }}
    steps:
      - name: Cancel workflow
        if: ${{ !env.ACT }}
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - id: set-gitrefs
        name: Set gitrefs
        run: |
          echo "ref_name: ${{ github.ref_name }}"
          echo "event_name: ${{ github.event_name }}"
          echo "head_ref: ${{ github.head_ref }}"
          if [[ ${{ github.ref_name }} =~ "main$" ]]; then
            echo "zero"
            BRANCH=main
          elif [[ ${{ github.ref_name }} =~ merge$ ]]; then
            echo "first"
            BRANCH=`echo ${{ github.head_ref }} | tr '[:upper:]' '[:lower:]' | sed "s/\//-/" | head -c 42`
          elif [[ ${{ github.event_name }} = "pull_request" ]]; then
            echo "second"
            BRANCH=`echo ${{ github.head_ref }} | tr '[:upper:]' '[:lower:]' | sed "s/\//-/" | head -c 42`
          elif [[ ${{ github.event_name }} = "delete" ]]; then
            echo "third"
            BRANCH=`echo ${{ github.event.ref }} | tr '[:upper:]' '[:lower:]' | sed "s/\//-/" | head -c 42`
          elif [[ ${{ github.event_name }} = "push" && `echo ${{ github.ref_name }} | grep -o "main$"` = "main" ]]; then
            echo "fourth"
            BRANCH=main
          else
            echo "fifth"
            BRANCH=`echo ${{ github.ref_name }} | tr '[:upper:]' '[:lower:]' | sed "s/\//-/" | head -c 42`
          fi
          GITREF=${BRANCH:-main}
          echo ::set-output name=gitref::"$GITREF"
          echo "GITREF: ${GITREF}"
          
          if [[ ${{ github.ref_name }} = main ]]; then
            JIRAISSUE=main
          elif [[ ${{ github.ref_name }} =~ ^efdc-[0-9]* ]]; then
            JIRAISSUE=`echo ${BRANCH} | grep -o "^efdc-[0-9]*"`
          else
            JIRAISSUE=na
          fi
          echo "JIRAISSUE: ${JIRAISSUE}"
          echo ::set-output name=jiraissue::"$JIRAISSUE"
          
          GITCOMMIT=`echo ${GITHUB_SHA} | cut -c1-8`
          echo ::set-output name=gitcommit::"$GITCOMMIT"
          echo "GITCOMMIT: ${GITCOMMIT}"
      - name: Check outputs
        run: |
          echo "gitref: ${{ steps.set-gitrefs.outputs.gitref }}"
          echo "gitcommit: ${{ steps.set-gitrefs.outputs.gitcommit }}"
          echo "jiraissue: ${{ steps.set-gitrefs.outputs.jiraissue }}"
  version-bump:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    needs:
      - setref
    runs-on: ubuntu-latest
    outputs:
      newversion: ${{ steps.new-version.outputs.newversion }}
      newversionwov: ${{ steps.new-version.outputs.newversionwov }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Check refs
        run: |
          echo "nextversion: ${{ needs.setref.outputs.nextversion }}"
          #echo "nextmajor: ${{ needs.setref.outputs.nextmajor }}"
      - name: Pull changes
        run: |
          git fetch
          git branch -l
          git ls-remote
          git pull origin master --tags
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: /opt/hostedtoolcache/node
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Apt update
        run: |
          sudo apt-get update -qq
      - name: Install apt deps
        run: |
          sudo apt-get install jq
      - name: Install node deps
        run: npm install -g standard-version@9.1.1 semantic-release@17.1.1
      - name: Configure git
        run: |
          git config --global user.email "atlanta.cicd@supply.com"
          git config --global user.name "Atlanta CICD (Supply)"
      - name: Version bump
        run: |
          standard-version --commit-all --verbose --packageFiles ./package.json --bumpFiles ./package.json
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          tags: true
      - id: new-version
        name: Output new version
        run: |
          NEWVERSION=`jq -r ".version" ./package.json`
          echo ::set-output name=newversion::v$NEWVERSION
          echo ::set-output name=newversionwov::$NEWVERSION
      - name: Check outputs
        run: |
          echo "newversion: ${{ steps.new-version.outputs.newversion }}"
          echo "newversionwov: ${{ steps.new-version.outputs.newversionwov }}"
  docker-build-push:
    environment: sandbox
    needs:
      - setref
      - version-bump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check gitref
        run: |
          echo "gitref: ${{ needs.setref.outputs.gitref }}"
          echo "newversionwov: ${{ needs.version-bump.outputs.newversionwov }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Azure login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_KEYVAULT_CREDS }}
      - id: set-kvm-secrets
        name: Set kvm secrets
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: 'fergsretfdemosbx' # name of key vault in Azure portal
          secrets: 'ACR-SPN-ID,ACR-SPN-PASS'  # comma separated list of secret keys to fetch from key vault
      - name: Login to supplysandbox
        uses: docker/login-action@v1
        with:
          registry: supplysandbox.azurecr.io
          username: ${{ steps.set-kvm-secrets.outputs.ACR-SPN-ID }}
          password: ${{ steps.set-kvm-secrets.outputs.ACR-SPN-PASS }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          tags: supplysandbox.azurecr.io/terraform-demo:${{ needs.version-bump.outputs.newversionwov }}
          build-args: git_commit=${{ needs.setref.outputs.gitcommit }},docker_tag=${{ needs.version-bump.outputs.newversionwov }}
          push: true
          context: ./docker
          labels: |
            gitref=${{ needs.setref.outputs.gitref }}
            gitcommit=${{ needs.setref.outputs.gitcommit }}
            repo=https://github.com/supplycom/terraform-demo
  helm-deploy-job:
    environment: sandbox
    runs-on: ubuntu-latest
    needs:
      - setref
      - docker-build-push
    steps:
      - uses: actions/checkout@v2
      - name: Check version
        run: |
          echo "newversion: ${{ needs.version-bump.outputs.newversion }}"
          echo "newversion w/o v: ${{ needs.version-bump.outputs.newversionwov }}"
#      - name: Set k8s context
#        uses: azure/k8s-set-context@v1
#        with:
#          method: service-account
#          k8s-url: https://feissupplyaks001-128cf81f.hcp.eastus2.azmk8s.io/
#          k8s-secret: |
#            ${{ secrets.K8S_AUTH }}
#      - name: Debug
#        run: |
#          kubectl get namespaces
#      - name: Uninstall helm
#        run: |
#          helm uninstall -n dev demo-site-$GITREF
#        continue-on-error: true
#        env:
#          GITREF: ${{ needs.setref.outputs.gitref }}
#      - name: Package and install helm
#        run: |
#          mkdir demo-site/charts/
#          helm package \
#            --version 0.1.0 ./demo-site \
#            --destination ./demo-site/charts/ \
#            --app-version $GITREF
#          helm install -n dev demo-site-$GITREF demo-site/charts/demo-site-0.1.0.tgz \
#            --set git.ref=$GITREF
#        working-directory: helm
#        env:
#          GITREF: ${{ needs.setref.outputs.gitref }}
